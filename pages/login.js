import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import { BACKEND_URL } from "../const";
import { authenticateUser } from "../auth";

export default function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [error, setError] = useState("");
  const [isRegistration, setIsRegistration] = useState(false);

  const handleSubmit = async (e) => {
    console.log("handleSubmit", e);
    if (password !== confirmPassword && isRegistration) {
      setError("Passwords do not match");
      return;
    } else {
      e.preventDefault();
      setIsSubmitting(true);
      setError("");
      try {
        const url = isRegistration
          ? `${BACKEND_URL}/api/users`
          : `${BACKEND_URL}/api/auth`;
        const res = await fetch(url, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            // Access Control Allow Origin: *
            "Access-Control-Allow-Origin": "http://localhost:3001",
          },
          body: JSON.stringify({
            email,
            password,
            firstName,
            lastName,
          }),
        });
        const data = await res.json();
        console.log(data);
        //asve to local storage
        if (data.token) {
          localStorage.setItem("token", data.token);
        }
        if (data.error) {
          setError(data.error);
        } else {
          window.location.href = "/";
        }
      } catch (err) {
        setError("Invalid email or password");
      }
      setIsSubmitting(false);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className="hero bg-scroll bg-bg min-h-screen bg-base-200">
          <div className="hero-content flex-col lg:flex-row-reverse">
            <div className="text-center lg:text-left">
              <h1 className="text-5xl font-bold">Login now!</h1>
              <p className="py-6">
                Provident cupiditate voluptatem et in. Quaerat fugiat ut
                assumenda excepturi exercitationem quasi. In deleniti eaque aut
                repudiandae et a id nisi.
              </p>
            </div>
            <div className="card flex-shrink-0 w-full max-w-sm shadow-2xl bg-base-100">
              <form onSubmit={handleSubmit}>
                <div className="card-body">
                  <div className="form-control">
                    <label className="label">
                      <span className="label-text">Email</span>
                    </label>
                    <input
                      type="text"
                      placeholder="email"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      className="input input-bordered"
                    />
                  </div>
                  <div className="form-control">
                    <label className="label">
                      <span className="label-text">Password</span>
                    </label>
                    <input
                      type="password"
                      placeholder="password"
                      className="input input-bordered"
                      value={password}
                      onChange={(e) => setPassword(e.target.value)}
                    />
                    {isRegistration && (
                      <div className="form-control">
                        <label className="label">
                          <span className="label-text">Confirm Password</span>
                        </label>
                        <input
                          type="password"
                          placeholder="password"
                          className="input input-bordered"
                          value={confirmPassword}
                          onChange={(e) => setConfirmPassword(e.target.value)}
                        />
                      </div>
                    )}
                    {isRegistration && (
                      <div className="form-control">
                        <label className="label">
                          <span className="label-text">First Name</span>
                        </label>
                        <input
                          type="text"
                          placeholder="first name"
                          className="input input-bordered"
                          value={firstName}
                          onChange={(e) => setFirstName(e.target.value)}
                        />
                      </div>
                    )}
                    {isRegistration && (
                      <div className="form-control">
                        <label className="label">
                          <span className="label-text">Last Name</span>
                        </label>
                        <input
                          type="text"
                          placeholder="last name"
                          className="input input-bordered"
                          value={lastName}
                          onChange={(e) => setLastName(e.target.value)}
                        />
                      </div>
                    )}
                    {!isRegistration && (
                      <label className="label">
                        <a href="#" className="label-text-alt link link-hover">
                          Forgot password?
                        </a>
                      </label>
                    )}
                    {!isRegistration && (
                      <label className="label text-center">
                        <a
                          onClick={() => setIsRegistration(true)}
                          className="label-text-alt link link-hover text-center"
                        >
                          Create an account
                        </a>
                      </label>
                    )}
                    {isRegistration && (
                      <label className="label">
                        <a
                          onClick={() => setIsRegistration(false)}
                          className="label-text-alt link link-hover"
                        >
                          Have an account? Login
                        </a>
                      </label>
                    )}
                  </div>
                  <label className="label">
                    <span className="label-text">{error}</span>
                  </label>
                  <div className="form-control mt-6">
                    <button
                      disabled={
                        !password ||
                        (isRegistration && !confirmPassword) ||
                        (isRegistration && password !== confirmPassword) ||
                        isSubmitting
                      }
                      className="btn btn-primary bg-gray-light border-gray-light hover:bg-gray-light"
                    >
                      {isRegistration ? "Register" : "Login"}
                    </button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}
